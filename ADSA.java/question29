public class PalindromeNumber {

    public static boolean isPalindrome(int x) {
        // Negative numbers and numbers ending with 0 (but not 0 itself) are not palindromes
        if (x < 0 || (x % 10 == 0 && x != 0)) return false;

        int reversed = 0;

        while (x > reversed) {
            int digit = x % 10;
            reversed = reversed * 10 + digit;
            x /= 10;
        }

        // x == reversed (even length) or x == reversed/10 (odd length)
        return (x == reversed || x == reversed / 10);
    }

    public static void main(String[] args) {
        int num1 = 121;
        int num2 = 123;
        int num3 = -121;
        int num4 = 10;

        System.out.println(num1 + " is palindrome? " + isPalindrome(num1)); // true
        System.out.println(num2 + " is palindrome? " + isPalindrome(num2)); // false
        System.out.println(num3 + " is palindrome? " + isPalindrome(num3)); // false
        System.out.println(num4 + " is palindrome? " + isPalindrome(num4)); // false
    }
}


/*Time Complexity: O(log₁₀(x))
→ Because we are dividing the number by 10 in each iteration.

Space Complexity: O(1)
→ No extra space used beyond a few variables. */